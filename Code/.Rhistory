detectCores()
library(parallel)
detectCores()
lapply(1:3, function(x) c(x, x^2, x^3))
lapply(1:3/3, round, digits=3)
library(parallel)
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
parLapply(cl, 2:4,
function(exponent)
2^exponent)
stopCluster(cl)
rm(cl)
cl<-makeCluster(no_cores)
base <- 2
clusterExport(cl, "base")
parLapply(cl,
2:4,
function(exponent)
base^exponent)
stopCluster(cl)
cl<-makeCluster(no_cores)
base <- 2
parLapply(cl,
2:4,
function(exponent)
base^exponent)
stopCluster(cl)
cl<-makeCluster(no_cores, type= "FORK")
base <- 2
parLapply(cl,
2:4,
function(exponent)
base^exponent)
stopCluster(cl)
?clusterEvalQ
vec <- vector()
theta<- c(beta_AdpA= 90, gamma_AdpA=320, k1_AdpA= 178, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
vec<- c(vec, theta)
vec <- vector()
theta1<- c(beta_AdpA= 90, gamma_AdpA=320, k1_AdpA= 178, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
theta2<- c(beta_AdpA= 1, gamma_AdpA=2, k1_AdpA= 3, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
vec<- c(vec, theta1)
vec <- c(vec, theta2)
vec[0]
vec[1]
vec[1,2]
vec[1][0]
vec <- vector()
theta1<- c(beta_AdpA= 90, gamma_AdpA=320, k1_AdpA= 178, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
theta2<- c(beta_AdpA= 1, gamma_AdpA=2, k1_AdpA= 3, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
vec<- c(vec, theta1)
vec <- list()
theta1<- c(beta_AdpA= 90, gamma_AdpA=320, k1_AdpA= 178, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
theta2<- c(beta_AdpA= 1, gamma_AdpA=2, k1_AdpA= 3, k2_AdpA= 90,  sigma_AdpA=3.5*10^-3, n1=1.2, n2=5, gamma_BldA= 203, k1_BldA=200, sigma_BldA= 3.5*10^-3,p= 5, sigma_adpAchange= 2*10^-2, sigma_bldAchange= 4*10^-2, shape_parameter= 32)
vec<- c(vec, list(theta1))
vec <- c(vec, list(theta2))
vec
vec[0]
vec[1]
vec[2]
vec[1:2]
rm(cl)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace
mcmcTrace[1]
mcmcTrace[2]
mcmcTrace[2][1]
mcmcTrace[2,1]
mcmcTrace[2]== mcmcTrace[1]
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace
library(coda)
trace <- mcmc(trace)
plot(trace)
summary(trace)
install.packages("coda")
library(coda)
trace <- mcmc(trace)
plot(trace)
summary(trace)
trace <- matrix(mcmcTrace, ncol = 14, byrow = T)
library(coda)
trace <- mcmc(trace)
plot(trace)
trace
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
mcmcTrace[2]
mcmcTrace[2]["k2_AdpA"]
mcmcTrace[1]["k2_AdpA"]
mcmcTrace[2][2]
mcmcTrace[[1]]
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
trace
race <- mcmc(trace)
trace <- mcmc(trace)
plot(trace)
?mcmc
trace1
trace2
type(trace1)
typeof(trace1)
typeof(trace2)
trace1== trace2
intersect(trace1, trace2)
length(intersect(trace1, trace2))
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
intersect(trace1, trace2)
?clusterSetRNGStream
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
source('~/Desktop/Trax_code/Code/bld_script.R', echo=TRUE)
trace
