source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
fnames
head(fnames)
source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Traxler_Lab/Code/WebScrapeTest.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?hist
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Onset
as.numeric(Onset)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("lubridate")
source('~/.active-rstudio-document', echo=TRUE)
date
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
days
source('~/.active-rstudio-document', echo=TRUE)
days
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
a
a[0][0]
a[0][1]
a[1][1]
a[1]
a[2]
a[[1]]
source('~/.active-rstudio-document', echo=TRUE)
days_discharge
source('~/.active-rstudio-document', echo=TRUE)
days_discharge-days_onset
?average
?avg
source('~/.active-rstudio-document', echo=TRUE)
r
source('~/.active-rstudio-document', echo=TRUE)
r
r
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
r
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?trajectory
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
trajectory<- ode(y=c(S=(10000-1),E=0,I=1,R=0),
times=seq(from=0,to=365,by=0.1),
parms=c(R0=3.25,latentPeriod=8,infectiousPeriod=7),
func=SEIR_ode)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
SEIR_ode <- function(time, state, parameters) {   ## Parameters:   beta <- parameters["R0"] / parameters["infectiousPeriod"]
f <- 1 / parameters["latentPeriod"]   rec <- 1 / parameters["infectiousPeriod"]   ## States:   S <- state["S"]   E <- state["E"]   I <- state["I"]   R <- state["R"]   N <- S + E + I + R   ## Derivatives:   dS <- -beta * S * I/N  dE <- beta * S * I/N - f * E   dI <- f * E - rec * I
dR <- rec * Ireturn(list(c(dS, dE, dI, dR)))
}
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
head(trajectory)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
legend(x="right", fill=c("blue","green","red","black"),legend=c("S","E","I","R"))
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
head(trajectory_df)
install.packages("readMzXmlData")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
spec$mass
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
exampleDirectory
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
exampleDirectory
source("011216_Alex_1.mzXML", chdir = T)
source("011216_Alex_1.mzXML", chdir=F)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
spec$metadata
spec$metaData
spec$spectrum$mass
spec$mass
spec
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
?ode
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
head(trajectory)
trajectory_df
trajectory_df$I_h/1000
Malaria_ODE<- function(time,state,parameters){
#parameters
#Human
beta_h <- 0.2
rec<- 1/ parameters["infectiousPeriodHuman"]
#vector
beta_v <- 0.05
gamma<-1/parameters["latentPeriodVector"]
mu_v= 1/parameters["lifeExpectancyVector"]
a= parameters["bitingRate"]
#States(Human)
S_h<- state["S_h"]
I_h<- state["I_h"]
H<- S_h+I_h
#States(Vector)
S_v<- state["S_v"]
E_v<- state["E_v"]
I_v<- state["I_v"]
V <- S_v+E_v+I_v
prev_H<- state["prev_H"]
prev_V<- state["prev_V"]
#Derivatives
dS_h<- -1*(V/H)*a*(I_v/V)*beta_h*S_h+rec*I_h
dI_h<-(V/H)*a*(I_v/V)*beta_h*S_h-rec*I_h
dS_v<- mu_v*V-a*(I_h/H)*beta_v*S_v-mu_v*S_v
dE_v<- a*(I_h/H)*beta_v*S_v-gamma*E_v-mu_v*E_v
dI_v<- gamma*E_v- mu_v*I_v
return(list(c(dS_h,dI_h,dS_v,dE_v,dI_v)))
}
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Practial8.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/PH252B-2.r', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Delay.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Malaria_Delay.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Zika_Practical8.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Kosvo_Data.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Kosvo_Data.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Kosvo_Data.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/MCMC.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/MCMC.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/MCMC.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Downloads/SIR_IBM.R', echo=TRUE)
source('C:/Users/Ryan/Downloads/SIR_IBM.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
tSim
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
tSim
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
?rep
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
print "hello world"
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
source('C:/Users/Ryan/Desktop/Junior_Year/Spring 2017/Practical11.R', echo=TRUE)
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["F_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
M <- 0.5* W *H *p
### Total Snail Population
N <- S+E+I
### Parasite Mating Probability
func <- function(x, mean.worm = W, clump = k) {
(1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^1+clump)
}
integral <- integrate(func, 0, 2*pi)$value
p = 1 - ((1-(W/(W+k)))^(1+k)/2*pi)*integral
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:200)
initState <- c(S=500, E=0, I=0, W=2)
theta <- c(H=300, mu_N=.17, mu_I=.1, mu_W=8.3*10^-4, mu_H=4.57*10^-5, f_N=.1, phi=10000, sigma=.025, k=.018, beta=1.36*10^-5, lambda=7.6*10^-5)
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["F_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Parasite Mating Probability
func <- function(x, mean.worm = W, clump = k) {
(1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^1+clump)
}
integral <- integrate(func, 0, 2*pi)$value
p = 1 - ((1-(W/(W+k)))^(1+k)/2*pi)*integral
### Human Infection State
W <- state["W"]
M <- 0.5* W *H *p
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:200)
initState <- c(S=500, E=0, I=0, W=2)
theta <- c(H=300, mu_N=.17, mu_I=.1, mu_W=8.3*10^-4, mu_H=4.57*10^-5, f_N=.1, phi=10000, sigma=.025, k=.018, beta=1.36*10^-5, lambda=7.6*10^-5)
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["F_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
func <- function(x, mean.worm = W, clump = k) {
(1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^1+clump)
}
integral <- integrate(func, 0, 2*pi)$value
p = 1 - ((1-(W/(W+k)))^(1+k)/2*pi)*integral
M <- 0.5* W *H *p
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:200)
initState <- c(S=500, E=0, I=0, W=2)
theta <- c(H=300, mu_N=.17, mu_I=.1, mu_W=8.3*10^-4, mu_H=4.57*10^-5, f_N=.1, phi=10000, sigma=.025, k=.018, beta=1.36*10^-5, lambda=7.6*10^-5)
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["F_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
#func <- function(x, mean.worm = W, clump = k) {
# (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
func <- function(x, parasite_burden = W, clump_param = k, alpha=(W/(W+k))) {
(1-cos(x))/(1+(alpha*cos(x)))^(1+clump_param)
}
integral <- integrate(func, 0, 2*pi)$value
p = 1 - ((1-(W/(W+k)))^(1+k)/2*pi)*integral
M <- 0.5* W *H *p
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:200)
initState <- c(S=500, E=0, I=0, W=2)
theta <- c(H=300, mu_N=.17, mu_I=.1, mu_W=8.3*10^-4, mu_H=4.57*10^-5, f_N=.1, phi=10000, sigma=.025, k=.018, beta=1.36*10^-5, lambda=7.6*10^-5)
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["F_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
func <- function(x, mean.worm = W, clump = k) {
(1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
}
#func <- function(x, parasite_burden = W, clump_param = k, alpha=(W/(W+k))) {
# (1-cos(x))/(1+(alpha*cos(x)))^(1+clump_param)
#}
integral <- integrate(func, 0, 2*pi)$value
p = 1 - ((1-(W/(W+k)))^(1+k)/2*pi)*integral
M <- 0.5* W *H *p
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:200)
initState <- c(S=500, E=0, I=0, W=2)
theta <- c(H=300, mu_N=.17, mu_I=.1, mu_W=8.3*10^-4, mu_H=4.57*10^-5, f_N=.1, phi=10000, sigma=.025, k=.018, beta=1.36*10^-5, lambda=7.6*10^-5)
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
?cos
?integrate
integral
func
?dpois
library(deSolve)
library(ggplot2)
#setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
library(deSolve)
library(ggplot2)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
#setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
library(deSolve)
library(ggplot2)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code/")
#setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
library(deSolve)
library(ggplot2)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
#setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
ggplot(points, aes(x= points$Time, y= points$Average.IMV))
ggplot(points, aes(x= points$Time, y= points$Average.IMV))+ geom_point()
library(deSolve)
library(ggplot2)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
#setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
ggplot(points, aes(x= points$Time, y= points$Average.IMV))+ geom_point()
library(deSolve)
library(ggplot2)
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
#setwd("C:/Users/Death Star/Desktop/Trax_Lab/Code")
points<- read.csv("adpA-experimental_rev2.csv", header=TRUE)
ggplot(points, aes(x= points$Time, y= points$Average.IMV))+ geom_point()
setwd("C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code")
system("R CMD SHLIB gene_circuit.c")
