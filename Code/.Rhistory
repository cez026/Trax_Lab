#func<-function(x, mean.worm = W, clump = k){
#  return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
#p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
p<-0.5
#Equilibrium Snail Population Sizes
x1 <-(sigma/(mu_I + mu_N))
#x2 <- 0.5*beta*H*p*W
#S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
#E <- x2*S
#I <- x1*E
#N <- S + E + I
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3,theta)
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
#Parameters
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
#func<-function(x, mean.worm = W, clump = k){
#  return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
#p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
p<-0.5
#Equilibrium Snail Population Sizes
x1 <-(sigma/(mu_I + mu_N))
#x2 <- 0.5*beta*H*p*W
#S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
#E <- x2*S
#I <- x1*E
#N <- S + E + I
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3,theta)
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3,theta)
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
#return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3,theta)
Reff(3,theta)$x1
### Plot Reff Profile
theta. <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
#return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3, theta.)
### Plot Reff Profile
theta. <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
#return (lambda*x1*x2*S)/(Ndeath*W)
}
Reff(3, theta.)
View(Reff)
View(Reff)
Reff(3,theta)$x1
Reff(3,theta.)$x1
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S <- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
return (x1,x2,S)
#return (lambda*x1*x2*S)/(Ndeath*W)
}
data.frame(Reff(3, theta.))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traj
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traj
phi
source('~/.active-rstudio-document', echo=TRUE)
traj
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
traj
source('~/.active-rstudio-document', echo=TRUE)
traj
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
W<-4
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S<- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + x1*x2 + x2)*(1 + x2))
S<-0.5
Ndeath<-(mu_W+mu_H)
(lambda*x1*x2*S)/(Ndeath*W)
lambda
phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p)
f_N*(1 + x1*x2 + x2)*(1 + x2)
f_N*(1 + (x1*x2) + x2)*(1 + x2)
### Plot Reff Profile
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["F_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
Reff<- function(W,theta){
H <- theta["H"] #Human population size
mu_N <- theta["mu_N"] #Natural snail death rate
mu_I <- theta["mu_I"] #Increased infected snail death rate
mu_W <- theta["mu_W"] #Natural parasite death rate
mu_H <- theta["mu_H"] #Parasite death rate due to human host death
f_N <- theta["f_N"] #Snail fertility rate
phi <- theta["phi"] #Snail carrying capacity
sigma <- theta["sigma"] #Daily transition rate exposed to infected snails
k <- theta["k"] #Clumping param of NegBin distribution
beta <- theta["beta"] #Human to snail transmission
lambda <- theta["lambda"] #Snail to human transmission
p<-0.5
x1 <-(sigma/(mu_I + mu_N))
x2 <- 0.5*beta*H*p*W
S<- (phi*(f_N*(1+x1) - mu_N - 0.5*beta*W*H*p))/(f_N*(1 + (x1*x2) + x2)*(1 + x2))
Ndeath<-(mu_W+mu_H)
#S <- (phi*(f_N*(1+x1) - mu_N - (0.5*beta*W*H*p)))/(f_N*(1 + (x1*x2) + x2)*(1 + x2))
return (lambda*x1*x2*S)/(Ndeath*W)
#return (lambda*x1*x2*S)/(Ndeath*W)
}
traj<-data.frame(Reff(10, theta))
traj
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
0.5*beta*H*p*3
0.5*beta*H*p*4
0.5*beta*H*p*10
source('~/.active-rstudio-document', echo=TRUE)
0.5*beta*H*p*500
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
Reff(500)
Reff(0)
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["f_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
#func<-function(x, mean.worm = W, clump = k){
#  return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
#p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
p<-0.90
#print(W)
### Number of Mircidia at Time Step
M <- 0.5* W *H *p
#print(M)
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
print(dW)
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:10)
initState <- c(S=5000, E=0, I=0, W=10)
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["f_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
#func<-function(x, mean.worm = W, clump = k){
#  return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
#p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
p<-0.90
#print(W)
### Number of Mircidia at Time Step
M <- 0.5* W *H *p
#print(M)
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
#print(dW)
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:10)
initState <- c(S=5000, E=0, I=0, W=10)
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["f_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
#func<-function(x, mean.worm = W, clump = k){
#  return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
#}
#p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
p<-0.90
#print(W)
### Number of Mircidia at Time Step
M <- 0.5* W *H *p
#print(M)
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
#print(dW)
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:2000)
initState <- c(S=5000, E=0, I=0, W=10)
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["f_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
func<-function(x, mean.worm = W, clump = k){
return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
}
p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
#p<-0.90
#print(W)
### Number of Mircidia at Time Step
M <- 0.5* W *H *p
#print(M)
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
#print(dW)
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:2000)
initState <- c(S=5000, E=0, I=0, W=10)
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
library(deSolve)
library(ggplot2)
schisto_ODE <- function(time, state, theta) {
#Parameters
H <- theta["H"]
mu_N <- theta["mu_N"]
mu_I <- theta["mu_I"]
mu_W <- theta["mu_W"]
mu_H <- theta["mu_H"]
f_N <- theta["f_N"]
phi <- theta["phi"]
sigma <- theta["sigma"]
k <- theta["k"]
beta <- theta["beta"]
lambda <- theta["lambda"]
### Snail States
S <- state["S"]
E <- state["E"]
I <- state["I"]
### Human Infection State
W <- state["W"]
### Parasite Mating Probability
func<-function(x, mean.worm = W, clump = k){
return (1-cos(x))/((1+((mean.worm/(clump+mean.worm))*cos(x)))^(1+clump))
}
p = 1 - (((1-(W/(W+k)))^(1+k))/2*pi)*(integrate(func, 0, 2*pi)$value)
#p<-0.90
#print(W)
### Number of Mircidia at Time Step
M <- 0.5* W *H *p
#print(M)
### Total Snail Population
N <- S+E+I
### ODE
dS<- f_N*(1-N/phi)*(S+E)- mu_N*S -beta*M*S
dE<- beta*M*S - (sigma +mu_N)*E
dI<- sigma*E -(mu_N +mu_I)*I
dW<- lambda*I -(mu_H + mu_W)*W
#print(dW)
return(list(c(dS,dE,dI,dW)))
}
# Generate model output:
time<- c(1:2000)
initState <- c(S=5000, E=0, I=0, W=10)
theta <- c(H=300, mu_N=0.17, mu_I=0.1, mu_W=(8.3*10^-4), mu_H=(4.57*10^-5), f_N=0.1, phi=10000, sigma=0.025, k=0.18, beta=(1.36*10^-5), lambda=(7.6*10^-5))
trajModel <- data.frame(ode(y=initState, times=time, func=schisto_ODE,
parms=theta, method = "ode45"))
source('C:/Users/Ryan/Desktop/gitcode/Trax_Lab/Code/Cellplot.R', echo=TRUE)
